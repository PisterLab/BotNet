[Simulator]


##0 for agent moves by direction, 1 for agent moves by velocity
#Solution must support velocity controlled agents
agent_type = 1

id=80085

## Seedvalue for the same random sequence
## Different number creates a different random sequence
seed_value = 122

## Maximum round number in swarm-world, 0 = infinite
max_round =  0

## 1/True = Call of agents in random order
## 0/False = Call of agents in added order in scenario
agent_random_order = False

## 1/True = Call of agents in random order after each round
## 0/False = Call of agents in random order only once at the start of the simulator
agent_random_order_always = False

## Viewing window size in pixels
window_size_x = 1920
window_size_y = 1080

## should the simulation close at the end of the algorithm? (only if the visualization on)
close_at_end = True

# module for generating plots
plot_generator = plot_generator
# module for generating csv files
csv_generator = csv_generator

follow_the_leader = True

[Visualization]
# Visualization 1 = On, 0 = Off
visualization = 2

#gui
gui = default


# Grid Configs. uncomment your choice!


;# Quadratic Grid grid default configs:
grid_class = quadratic.QuadraticGrid
agent_model_file = 2d_agent.obj
item_model_file = 2d_quad_item.obj
location_model_file = 2d_location.obj
grid_size = 10
;# end of Quadratic grid configs


;# Triangular grid default configs:
; grid_class = triangular.TriangularGrid
; agent_model_file = 2d_agent.obj
; item_model_file = 2d_hex_item.obj
; location_model_file = 2d_location.obj
; grid_size = 10
;# end of Triangular grid configs


;# cubic grid default configs:
; grid_class = cubic.CubicGrid
; agent_model_file = 3d_agent.obj
; item_model_file = 3d_cube_item.obj
; location_model_file = 3d_location.obj
; grid_size = 10
;# end of cubic grid configs


# ccp grid default configs:
;grid_class = ccp.CCPGrid
;agent_model_file = 3d_agent.obj
;item_model_file = 3d_ccp_item.obj
;location_model_file = 3d_location.obj
;grid_size = 5
# end of ccp grid configs


# matter default colors (rgba)
agent_color = (0.8, 0.3, 0.3, 1.0)
agent_scaling = (1.0, 1.0, 1.0)

item_color = (0.3, 0.3, 0.8, 1.0)
item_scaling = (1.0, 1.0, 1.0)

location_color = (0.3, 0.8, 0.3, 1.0)
location_scaling = (1.2, 1.2, 1.2)

grid_color = (0.0, 0.0, 0.0, 1.0)
cursor_color = (0.5, 0.5, 0.5, 0.5)
center_color = (1.0, 0.0, 0.0, 0.5)

# background  (rgb)
background_color = (1.0, 1.0, 1.0)
# color of grid lines (rgba)
line_color = (0.0, 0.0, 0.0, 0.5)
# length/scaling of the grid lines (max should be 1,1,1)
line_scaling = (1.0, 1.0, 1.0)
# flag for showing the lines
show_lines = True
# color of grid coordinates (rgba)
coordinates_color = (0.0, 0.0, 0.0, 1.0)
# size/scaling of the coordinate model. wouldn't make it bigger than 0.2, 0.2, 0.2
coordinates_scaling = (0.05, 0.05, 0.05)
# flag for showing the coordinate models
show_coordinates = False
# flag for showing the center of the grid
show_center = True
# camera focus color
focus_color = (1.0, 1.0, 1.0, 0.5)
# show camera focus
show_focus = False

# Camera init values
look_at = (0.0, 0.0, 0.0)
phi = -90
theta = 0
radius = 10
fov = 40
cursor_offset = -10
render_distance = 1000

# turns the rendering of the border on and off
#works only with the border flag set to True
show_border = True
# color of the border lines
border_color = (1.0, 0.0, 0.0, 1.0)

# animation flag
animation = True
# automatic speed adjustment for the animation
auto_animation = True
# speed for manual adjustment of the animation (if auto_animation is false)
manual_animation_speed = 50


[World]

## False = Unlimited world size
## True = limited world size
border = False

## Swarm-World Type Flat=0 Mirrored =1
## Works only with border flag set on True
type = 0

## Swarm-World world size in points
## Works only with border flag set on True
size_x = 5.0
size_y = 5.0
size_z = 5.0

## Maximum number of agents that can be created while simulating
max_agents = 500

[Matter]
## with memory (mm) limitation 1=Yes 0=No
memory_limitation = False

## mm size in quantity
## Works only with memory_limitation flag set on 1
location_mm_size = 2
agent_mm_size = 2
item_mm_size = 2

[File]

##Examples##

#scenario = post_viz
#solution = post_viz
#marking (rasenmaeher) algorithm in 3D
#scenario = random_find
#solution =  rl_model
scenario = dual_vis_tisch
solution = flock
##Moving
#scenario = lonely_agent
#scenario = n_agent_in_line
#solution = random_walk
#solution = triangular_round_walk
#solution = random_walk_with_take_and_drop

## Creating and Deleting
#scenario = lonely_agent
#solution =  create_delete

## Take and Drop
#scenario=two_agents_items_locations
#solution= take_drop_aims

## Read and Write
#scenario = two_agents_items_markers
#solution =  read_write
;
;scenario = test_interfaces
;solution =  test_all_the_interfaces
